let rev = {contra : unitR  =>  forall i; alpha; j; beta. 
(list [i, alpha] U bool) => (list [j, beta] U bool) => list[i+j, alpha+beta] U bool, 0} in

fix shuffle(z). Lam. Lam. lam l. caseL l of 
   nil =>  nil
 | h::tl => h :: shuffle () [] [] (rev () [] [] [] [] tl nil)

<= 0 : unitR => forall i; alpha.  (list[i,alpha] U int) => list[i,alpha] U bool
